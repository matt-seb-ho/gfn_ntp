[{"url": "https://github.com/leanprover-community/mathlib4", "commit": "fe4454af900584467d21f4fd4fe951d29d9332a7", "file_path": ".lake/packages/std/Std/Data/List/Lemmas.lean", "full_name": "List.ext", "start": [823, 8], "end": [829, 63], "traced_tactics": [{"tactic": "have h0 : some a = some a' := h 0", "annotated_tactic": ["have h0 : <a>some</a> a = <a>some</a> a' := h 0", [{"full_name": "Option.some", "def_path": ".lake/packages/lean4/src/lean/Init/Prelude.lean", "def_pos": [2226, 5], "def_end_pos": [2226, 9]}, {"full_name": "Option.some", "def_path": ".lake/packages/lean4/src/lean/Init/Prelude.lean", "def_pos": [2226, 5], "def_end_pos": [2226, 9]}]], "state_before": "\u03b1 : Type u_1\na : \u03b1\nl\u2081 : List \u03b1\na' : \u03b1\nl\u2082 : List \u03b1\nh : \u2200 (n : Nat), get? (a :: l\u2081) n = get? (a' :: l\u2082) n\n\u22a2 a :: l\u2081 = a' :: l\u2082", "state_after": "\u03b1 : Type u_1\na : \u03b1\nl\u2081 : List \u03b1\na' : \u03b1\nl\u2082 : List \u03b1\nh : \u2200 (n : Nat), get? (a :: l\u2081) n = get? (a' :: l\u2082) n\nh0 : some a = some a'\n\u22a2 a :: l\u2081 = a' :: l\u2082"}, {"tactic": "injection h0 with aa", "annotated_tactic": ["injection h0 with aa", []], "state_before": "\u03b1 : Type u_1\na : \u03b1\nl\u2081 : List \u03b1\na' : \u03b1\nl\u2082 : List \u03b1\nh : \u2200 (n : Nat), get? (a :: l\u2081) n = get? (a' :: l\u2082) n\nh0 : some a = some a'\n\u22a2 a :: l\u2081 = a' :: l\u2082", "state_after": "\u03b1 : Type u_1\na : \u03b1\nl\u2081 : List \u03b1\na' : \u03b1\nl\u2082 : List \u03b1\nh : \u2200 (n : Nat), get? (a :: l\u2081) n = get? (a' :: l\u2082) n\naa : a = a'\n\u22a2 a :: l\u2081 = a' :: l\u2082"}, {"tactic": "simp only [aa, ext fun n => h (n+1)]", "annotated_tactic": ["simp only [aa, ext fun n => h (n+1)]", []], "state_before": "\u03b1 : Type u_1\na : \u03b1\nl\u2081 : List \u03b1\na' : \u03b1\nl\u2082 : List \u03b1\nh : \u2200 (n : Nat), get? (a :: l\u2081) n = get? (a' :: l\u2082) n\naa : a = a'\n\u22a2 a :: l\u2081 = a' :: l\u2082", "state_after": "no goals"}]}]